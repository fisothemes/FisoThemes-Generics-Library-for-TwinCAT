<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1">
  <POU Name="F_GenericToTimeOfDay" Id="{09f73d10-d024-0f9a-1a62-6ff1c6dbb389}" SpecialFunc="None">
    <Declaration><![CDATA[// Converts a generic value to TOD (Time of Day) based on its type class.
FUNCTION F_GenericToTimeOfDay : TOD // The converted TOD value.
VAR_INPUT
	Value : FsCommon.T_Generic; // The generic value to convert to TOD.
END_VAR
VAR_OUTPUT
	Error : FsError.T_Error; // Error information if conversion fails.
END_VAR
VAR
	uValue : FsCommon.U_Pointer := (pVoid := Value.pValue);
END_VAR]]></Declaration>
    <Implementation>
      <ST><![CDATA[IF uValue.pVoid = 0 THEN 
	Error := FsError.F_CreateError(
			FsError.GVL_ErrorDescriptors.fbGeneralErrorCodes,
			FsError.E_GeneralErrorCode.ERR_INVALID_POINTER);
	RETURN; 
	END_IF

CASE Value.TypeClass OF 
	__SYSTEM.TYPE_CLASS.TYPE_BOOL:
		F_GenericToTimeOfDay := TO_TOD(uValue.pBool^);
		
    __SYSTEM.TYPE_CLASS.TYPE_BYTE:
		F_GenericToTimeOfDay := TO_TOD(uValue.pByte^);
		
    __SYSTEM.TYPE_CLASS.TYPE_WORD:
		F_GenericToTimeOfDay := TO_TOD(uValue.pWord^);
		
    __SYSTEM.TYPE_CLASS.TYPE_DWORD:
		F_GenericToTimeOfDay := TO_TOD(uValue.pDWord^);
		
    __SYSTEM.TYPE_CLASS.TYPE_LWORD:
		F_GenericToTimeOfDay := TO_TOD(uValue.pLWord^);
		
    __SYSTEM.TYPE_CLASS.TYPE_SINT:
		F_GenericToTimeOfDay := TO_TOD(uValue.pSint^);
		
    __SYSTEM.TYPE_CLASS.TYPE_INT:
		F_GenericToTimeOfDay := TO_TOD(uValue.pInt^);
		
    __SYSTEM.TYPE_CLASS.TYPE_DINT:
		F_GenericToTimeOfDay := TO_TOD(uValue.pDint^);
		
    __SYSTEM.TYPE_CLASS.TYPE_LINT:
		F_GenericToTimeOfDay := TO_TOD(uValue.pLint^);
		
    __SYSTEM.TYPE_CLASS.TYPE_USINT:
		F_GenericToTimeOfDay := TO_TOD(uValue.pUSint^);
		
    __SYSTEM.TYPE_CLASS.TYPE_UINT:
		F_GenericToTimeOfDay := TO_TOD(uValue.pUInt^);
		
    __SYSTEM.TYPE_CLASS.TYPE_UDINT:
		F_GenericToTimeOfDay := TO_TOD(uValue.pUDint^);
		
    __SYSTEM.TYPE_CLASS.TYPE_ULINT:
		F_GenericToTimeOfDay := TO_TOD(uValue.pULint^);
		
   __SYSTEM.TYPE_CLASS.TYPE_REAL:
		F_GenericToTimeOfDay := TO_TOD(uValue.pReal^);
		
    __SYSTEM.TYPE_CLASS.TYPE_LREAL:
		F_GenericToTimeOfDay := TO_TOD(uValue.pLReal^);
		
    __SYSTEM.TYPE_CLASS.TYPE_STRING:
		F_GenericToTimeOfDay := TO_TOD(uValue.pString^);
		
   __SYSTEM.TYPE_CLASS.TYPE_WSTRING:
		F_GenericToTimeOfDay := TO_TOD(uValue.pWString^);
		
    __SYSTEM.TYPE_CLASS.TYPE_TIME:
		F_GenericToTimeOfDay := TO_TOD(uValue.pTime^);
		
    __SYSTEM.TYPE_CLASS.TYPE_DATE:
		F_GenericToTimeOfDay := TO_TOD(uValue.pDate^);
		
    __SYSTEM.TYPE_CLASS.TYPE_DATEANDTIME:
		F_GenericToTimeOfDay := TO_TOD(uValue.pDateAndTime^);
		
    __SYSTEM.TYPE_CLASS.TYPE_TIMEOFDAY:
		F_GenericToTimeOfDay := uValue.pTimeOfDay^;
		
	__SYSTEM.TYPE_CLASS.TYPE_LTIME:
		F_GenericToTimeOfDay := TO_TOD(uValue.pLTime^);
ELSE
	Error := FsError.F_CreateError(
			FsError.GVL_ErrorDescriptors.fbGeneralErrorCodes,
			FsError.E_GeneralErrorCode.ERR_TYPE_MISMATCH);
	END_CASE]]></ST>
    </Implementation>
  </POU>
</TcPlcObject>